{"version":3,"file":"thunks.js","names":["_analytics","require","_auth","_frontendPlatform","_optimizelyExperiment","_interopRequireDefault","_api","_slice","_optimizely","_excluded","e","__esModule","default","_objectWithoutProperties","t","o","r","i","_objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","s","length","includes","propertyIsEnumerable","call","n","hasOwnProperty","ownKeys","keys","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","addChatMessage","role","content","courseId","promptExperimentVariationKey","undefined","dispatch","getState","messageList","conversationId","learningAssistant","timestamp","Date","message","toString","updatedMessageList","setMessageList","clearCurrentMessage","resetApiError","userId","getAuthenticatedUser","sendTrackEvent","id","course_id","user_id","experiment_name","OPTIMIZELY_PROMPT_EXPERIMENT_KEY","variation_key","getChatResponse","unitId","upgradeable","setApiIsLoading","trackChatBotMessageOptimizely","customQueryParams","responseVariation","fetchChatResponse","getLearningAssistantChatSummary","error","setApiError","updateCurrentMessage","setCurrentMessage","currentMessage","clearApiError","acknowledgeDisclosure","isDisclosureAcknowledged","setDisclosureAcknowledged","updateSidebarIsOpen","isOpen","setSidebarIsOpen","data","fetchLearningAssistantChatSummary","setIsEnabled","enabled","rawMessageList","message_history","map","_ref","msg","auditTrial","startDate","audit_trial","start_date","expirationDate","expiration_date","auditTrialDatesValid","isNaN","parse","setAuditTrial","camelCaseObject","audit_trial_length_days","setAuditTrialLengthDays"],"sources":["../../src/data/thunks.js"],"sourcesContent":["import { sendTrackEvent } from '@edx/frontend-platform/analytics';\nimport { getAuthenticatedUser } from '@edx/frontend-platform/auth';\n\nimport { camelCaseObject } from '@edx/frontend-platform';\nimport trackChatBotMessageOptimizely from '../utils/optimizelyExperiment';\nimport {\n  fetchChatResponse,\n  fetchLearningAssistantChatSummary,\n} from './api';\nimport {\n  setCurrentMessage,\n  clearCurrentMessage,\n  setMessageList,\n  setApiError,\n  setApiIsLoading,\n  resetApiError,\n  setDisclosureAcknowledged,\n  setSidebarIsOpen,\n  setIsEnabled,\n  setAuditTrial,\n  setAuditTrialLengthDays,\n} from './slice';\nimport { OPTIMIZELY_PROMPT_EXPERIMENT_KEY } from './optimizely';\n\nexport function addChatMessage(role, content, courseId, promptExperimentVariationKey = undefined) {\n  return (dispatch, getState) => {\n    const { messageList, conversationId } = getState().learningAssistant;\n\n    // Redux recommends only serializable values in the store, so we'll stringify the timestap to store in Redux.\n    // When we need to operate on the Date object, we'll deserialize the string.\n    const timestamp = new Date();\n\n    const message = {\n      role,\n      content,\n      timestamp: timestamp.toString(),\n    };\n    const updatedMessageList = [...messageList, message];\n    dispatch(setMessageList({ messageList: updatedMessageList }));\n    dispatch(clearCurrentMessage());\n    dispatch(resetApiError());\n\n    const { userId } = getAuthenticatedUser();\n\n    sendTrackEvent('edx.ui.lms.learning_assistant.message', {\n      id: conversationId,\n      course_id: courseId,\n      user_id: userId,\n      timestamp: message.timestamp,\n      role: message.role,\n      ...(promptExperimentVariationKey ? {\n        experiment_name: OPTIMIZELY_PROMPT_EXPERIMENT_KEY,\n        variation_key: promptExperimentVariationKey,\n      } : {}),\n    });\n  };\n}\n\nexport function getChatResponse(courseId, unitId, upgradeable, promptExperimentVariationKey = undefined) {\n  return async (dispatch, getState) => {\n    const { userId } = getAuthenticatedUser();\n    const { messageList } = getState().learningAssistant;\n\n    dispatch(setApiIsLoading(true));\n    try {\n      if (promptExperimentVariationKey) {\n        trackChatBotMessageOptimizely(userId.toString());\n      }\n      const customQueryParams = promptExperimentVariationKey ? { responseVariation: promptExperimentVariationKey } : {};\n      const message = await fetchChatResponse(courseId, messageList, unitId, customQueryParams);\n\n      // Refresh chat summary only on the first message for an upgrade eligible user\n      // so we can tell if the user has just initiated an audit trial\n      if (messageList.length === 1 && upgradeable) {\n        // eslint-disable-next-line no-use-before-define\n        dispatch(getLearningAssistantChatSummary(courseId));\n      }\n\n      dispatch(setApiIsLoading(false));\n      dispatch(addChatMessage(message.role, message.content, courseId, promptExperimentVariationKey));\n    } catch (error) {\n      dispatch(setApiError());\n      dispatch(setApiIsLoading(false));\n    }\n  };\n}\n\nexport function updateCurrentMessage(content) {\n  return (dispatch) => {\n    dispatch(setCurrentMessage({ currentMessage: content }));\n  };\n}\n\nexport function clearApiError() {\n  return (dispatch) => {\n    dispatch(resetApiError());\n  };\n}\n\nexport function acknowledgeDisclosure(isDisclosureAcknowledged) {\n  return (dispatch) => {\n    dispatch(setDisclosureAcknowledged(isDisclosureAcknowledged));\n  };\n}\n\nexport function updateSidebarIsOpen(isOpen) {\n  return (dispatch) => {\n    dispatch(setSidebarIsOpen(isOpen));\n  };\n}\n\nexport function getLearningAssistantChatSummary(courseId) {\n  return async (dispatch) => {\n    dispatch(setApiIsLoading(true));\n\n    try {\n      const data = await fetchLearningAssistantChatSummary(courseId);\n\n      // Enabled\n      dispatch(setIsEnabled(data.enabled));\n\n      // Message History\n      const rawMessageList = data.message_history;\n\n      // If returned message history data is not empty\n      if (rawMessageList.length) {\n        const messageList = rawMessageList\n          .map(({ timestamp, ...msg }) => ({\n            ...msg,\n            timestamp: new Date(timestamp).toString(), // Parse ISO time to Date()\n          }));\n\n        dispatch(setMessageList({ messageList }));\n\n        // If it has chat history, then we assume the user already aknowledged.\n        dispatch(setDisclosureAcknowledged(true));\n      }\n\n      // Audit Trial\n      const auditTrial = {\n        startDate: data.audit_trial.start_date,\n        expirationDate: data.audit_trial.expiration_date,\n      };\n\n      // Validate audit trial data & dates\n      const auditTrialDatesValid = !(\n        Number.isNaN(Date.parse(auditTrial.startDate))\n        || Number.isNaN(Date.parse(auditTrial.expirationDate))\n      );\n\n      if (Object.keys(auditTrial).length !== 0 && auditTrialDatesValid) {\n        dispatch(setAuditTrial(camelCaseObject(auditTrial)));\n      }\n\n      if (data.audit_trial_length_days) { dispatch(setAuditTrialLengthDays(data.audit_trial_length_days)); }\n    } catch (error) {\n      dispatch(setApiError());\n    }\n    dispatch(setApiIsLoading(false));\n  };\n}\n"],"mappings":";;;;;;;;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AAEA,IAAAE,iBAAA,GAAAF,OAAA;AACA,IAAAG,qBAAA,GAAAC,sBAAA,CAAAJ,OAAA;AACA,IAAAK,IAAA,GAAAL,OAAA;AAIA,IAAAM,MAAA,GAAAN,OAAA;AAaA,IAAAO,WAAA,GAAAP,OAAA;AAAgE,MAAAQ,SAAA;AAAA,SAAAJ,uBAAAK,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAAA,SAAAG,yBAAAH,CAAA,EAAAI,CAAA,gBAAAJ,CAAA,iBAAAK,CAAA,EAAAC,CAAA,EAAAC,CAAA,GAAAC,6BAAA,CAAAR,CAAA,EAAAI,CAAA,OAAAK,MAAA,CAAAC,qBAAA,QAAAC,CAAA,GAAAF,MAAA,CAAAC,qBAAA,CAAAV,CAAA,QAAAM,CAAA,MAAAA,CAAA,GAAAK,CAAA,CAAAC,MAAA,EAAAN,CAAA,IAAAD,CAAA,GAAAM,CAAA,CAAAL,CAAA,GAAAF,CAAA,CAAAS,QAAA,CAAAR,CAAA,QAAAS,oBAAA,CAAAC,IAAA,CAAAf,CAAA,EAAAK,CAAA,MAAAE,CAAA,CAAAF,CAAA,IAAAL,CAAA,CAAAK,CAAA,aAAAE,CAAA;AAAA,SAAAC,8BAAAF,CAAA,EAAAN,CAAA,gBAAAM,CAAA,iBAAAF,CAAA,gBAAAY,CAAA,IAAAV,CAAA,SAAAW,cAAA,CAAAF,IAAA,CAAAT,CAAA,EAAAU,CAAA,SAAAhB,CAAA,CAAAa,QAAA,CAAAG,CAAA,aAAAZ,CAAA,CAAAY,CAAA,IAAAV,CAAA,CAAAU,CAAA,YAAAZ,CAAA;AAAA,SAAAc,QAAAlB,CAAA,EAAAM,CAAA,QAAAF,CAAA,GAAAK,MAAA,CAAAU,IAAA,CAAAnB,CAAA,OAAAS,MAAA,CAAAC,qBAAA,QAAAL,CAAA,GAAAI,MAAA,CAAAC,qBAAA,CAAAV,CAAA,GAAAM,CAAA,KAAAD,CAAA,GAAAA,CAAA,CAAAe,MAAA,WAAAd,CAAA,WAAAG,MAAA,CAAAY,wBAAA,CAAArB,CAAA,EAAAM,CAAA,EAAAgB,UAAA,OAAAlB,CAAA,CAAAmB,IAAA,CAAAC,KAAA,CAAApB,CAAA,EAAAC,CAAA,YAAAD,CAAA;AAAA,SAAAqB,cAAAzB,CAAA,aAAAM,CAAA,MAAAA,CAAA,GAAAoB,SAAA,CAAAd,MAAA,EAAAN,CAAA,UAAAF,CAAA,WAAAsB,SAAA,CAAApB,CAAA,IAAAoB,SAAA,CAAApB,CAAA,QAAAA,CAAA,OAAAY,OAAA,CAAAT,MAAA,CAAAL,CAAA,OAAAuB,OAAA,WAAArB,CAAA,IAAAsB,eAAA,CAAA5B,CAAA,EAAAM,CAAA,EAAAF,CAAA,CAAAE,CAAA,SAAAG,MAAA,CAAAoB,yBAAA,GAAApB,MAAA,CAAAqB,gBAAA,CAAA9B,CAAA,EAAAS,MAAA,CAAAoB,yBAAA,CAAAzB,CAAA,KAAAc,OAAA,CAAAT,MAAA,CAAAL,CAAA,GAAAuB,OAAA,WAAArB,CAAA,IAAAG,MAAA,CAAAsB,cAAA,CAAA/B,CAAA,EAAAM,CAAA,EAAAG,MAAA,CAAAY,wBAAA,CAAAjB,CAAA,EAAAE,CAAA,iBAAAN,CAAA;AAAA,SAAA4B,gBAAA5B,CAAA,EAAAM,CAAA,EAAAF,CAAA,YAAAE,CAAA,GAAA0B,cAAA,CAAA1B,CAAA,MAAAN,CAAA,GAAAS,MAAA,CAAAsB,cAAA,CAAA/B,CAAA,EAAAM,CAAA,IAAA2B,KAAA,EAAA7B,CAAA,EAAAkB,UAAA,MAAAY,YAAA,MAAAC,QAAA,UAAAnC,CAAA,CAAAM,CAAA,IAAAF,CAAA,EAAAJ,CAAA;AAAA,SAAAgC,eAAA5B,CAAA,QAAAG,CAAA,GAAA6B,YAAA,CAAAhC,CAAA,uCAAAG,CAAA,GAAAA,CAAA,GAAAA,CAAA;AAAA,SAAA6B,aAAAhC,CAAA,EAAAE,CAAA,2BAAAF,CAAA,KAAAA,CAAA,SAAAA,CAAA,MAAAJ,CAAA,GAAAI,CAAA,CAAAiC,MAAA,CAAAC,WAAA,kBAAAtC,CAAA,QAAAO,CAAA,GAAAP,CAAA,CAAAe,IAAA,CAAAX,CAAA,EAAAE,CAAA,uCAAAC,CAAA,SAAAA,CAAA,YAAAgC,SAAA,yEAAAjC,CAAA,GAAAkC,MAAA,GAAAC,MAAA,EAAArC,CAAA;AAEzD,SAASsC,cAAcA,CAACC,IAAI,EAAEC,OAAO,EAAEC,QAAQ,EAA4C;EAAA,IAA1CC,4BAA4B,GAAApB,SAAA,CAAAd,MAAA,QAAAc,SAAA,QAAAqB,SAAA,GAAArB,SAAA,MAAGqB,SAAS;EAC9F,OAAO,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAC7B,MAAM;MAAEC,WAAW;MAAEC;IAAe,CAAC,GAAGF,QAAQ,CAAC,CAAC,CAACG,iBAAiB;;IAEpE;IACA;IACA,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;IAE5B,MAAMC,OAAO,GAAG;MACdZ,IAAI;MACJC,OAAO;MACPS,SAAS,EAAEA,SAAS,CAACG,QAAQ,CAAC;IAChC,CAAC;IACD,MAAMC,kBAAkB,GAAG,CAAC,GAAGP,WAAW,EAAEK,OAAO,CAAC;IACpDP,QAAQ,CAAC,IAAAU,qBAAc,EAAC;MAAER,WAAW,EAAEO;IAAmB,CAAC,CAAC,CAAC;IAC7DT,QAAQ,CAAC,IAAAW,0BAAmB,EAAC,CAAC,CAAC;IAC/BX,QAAQ,CAAC,IAAAY,oBAAa,EAAC,CAAC,CAAC;IAEzB,MAAM;MAAEC;IAAO,CAAC,GAAG,IAAAC,0BAAoB,EAAC,CAAC;IAEzC,IAAAC,yBAAc,EAAC,uCAAuC,EAAAtC,aAAA;MACpDuC,EAAE,EAAEb,cAAc;MAClBc,SAAS,EAAEpB,QAAQ;MACnBqB,OAAO,EAAEL,MAAM;MACfR,SAAS,EAAEE,OAAO,CAACF,SAAS;MAC5BV,IAAI,EAAEY,OAAO,CAACZ;IAAI,GACdG,4BAA4B,GAAG;MACjCqB,eAAe,EAAEC,4CAAgC;MACjDC,aAAa,EAAEvB;IACjB,CAAC,GAAG,CAAC,CAAC,CACP,CAAC;EACJ,CAAC;AACH;AAEO,SAASwB,eAAeA,CAACzB,QAAQ,EAAE0B,MAAM,EAAEC,WAAW,EAA4C;EAAA,IAA1C1B,4BAA4B,GAAApB,SAAA,CAAAd,MAAA,QAAAc,SAAA,QAAAqB,SAAA,GAAArB,SAAA,MAAGqB,SAAS;EACrG,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,MAAM;MAAEY;IAAO,CAAC,GAAG,IAAAC,0BAAoB,EAAC,CAAC;IACzC,MAAM;MAAEZ;IAAY,CAAC,GAAGD,QAAQ,CAAC,CAAC,CAACG,iBAAiB;IAEpDJ,QAAQ,CAAC,IAAAyB,sBAAe,EAAC,IAAI,CAAC,CAAC;IAC/B,IAAI;MACF,IAAI3B,4BAA4B,EAAE;QAChC,IAAA4B,6BAA6B,EAACb,MAAM,CAACL,QAAQ,CAAC,CAAC,CAAC;MAClD;MACA,MAAMmB,iBAAiB,GAAG7B,4BAA4B,GAAG;QAAE8B,iBAAiB,EAAE9B;MAA6B,CAAC,GAAG,CAAC,CAAC;MACjH,MAAMS,OAAO,GAAG,MAAM,IAAAsB,sBAAiB,EAAChC,QAAQ,EAAEK,WAAW,EAAEqB,MAAM,EAAEI,iBAAiB,CAAC;;MAEzF;MACA;MACA,IAAIzB,WAAW,CAACtC,MAAM,KAAK,CAAC,IAAI4D,WAAW,EAAE;QAC3C;QACAxB,QAAQ,CAAC8B,+BAA+B,CAACjC,QAAQ,CAAC,CAAC;MACrD;MAEAG,QAAQ,CAAC,IAAAyB,sBAAe,EAAC,KAAK,CAAC,CAAC;MAChCzB,QAAQ,CAACN,cAAc,CAACa,OAAO,CAACZ,IAAI,EAAEY,OAAO,CAACX,OAAO,EAAEC,QAAQ,EAAEC,4BAA4B,CAAC,CAAC;IACjG,CAAC,CAAC,OAAOiC,KAAK,EAAE;MACd/B,QAAQ,CAAC,IAAAgC,kBAAW,EAAC,CAAC,CAAC;MACvBhC,QAAQ,CAAC,IAAAyB,sBAAe,EAAC,KAAK,CAAC,CAAC;IAClC;EACF,CAAC;AACH;AAEO,SAASQ,oBAAoBA,CAACrC,OAAO,EAAE;EAC5C,OAAQI,QAAQ,IAAK;IACnBA,QAAQ,CAAC,IAAAkC,wBAAiB,EAAC;MAAEC,cAAc,EAAEvC;IAAQ,CAAC,CAAC,CAAC;EAC1D,CAAC;AACH;AAEO,SAASwC,aAAaA,CAAA,EAAG;EAC9B,OAAQpC,QAAQ,IAAK;IACnBA,QAAQ,CAAC,IAAAY,oBAAa,EAAC,CAAC,CAAC;EAC3B,CAAC;AACH;AAEO,SAASyB,qBAAqBA,CAACC,wBAAwB,EAAE;EAC9D,OAAQtC,QAAQ,IAAK;IACnBA,QAAQ,CAAC,IAAAuC,gCAAyB,EAACD,wBAAwB,CAAC,CAAC;EAC/D,CAAC;AACH;AAEO,SAASE,mBAAmBA,CAACC,MAAM,EAAE;EAC1C,OAAQzC,QAAQ,IAAK;IACnBA,QAAQ,CAAC,IAAA0C,uBAAgB,EAACD,MAAM,CAAC,CAAC;EACpC,CAAC;AACH;AAEO,SAASX,+BAA+BA,CAACjC,QAAQ,EAAE;EACxD,OAAO,MAAOG,QAAQ,IAAK;IACzBA,QAAQ,CAAC,IAAAyB,sBAAe,EAAC,IAAI,CAAC,CAAC;IAE/B,IAAI;MACF,MAAMkB,IAAI,GAAG,MAAM,IAAAC,sCAAiC,EAAC/C,QAAQ,CAAC;;MAE9D;MACAG,QAAQ,CAAC,IAAA6C,mBAAY,EAACF,IAAI,CAACG,OAAO,CAAC,CAAC;;MAEpC;MACA,MAAMC,cAAc,GAAGJ,IAAI,CAACK,eAAe;;MAE3C;MACA,IAAID,cAAc,CAACnF,MAAM,EAAE;QACzB,MAAMsC,WAAW,GAAG6C,cAAc,CAC/BE,GAAG,CAACC,IAAA;UAAA,IAAC;cAAE7C;YAAkB,CAAC,GAAA6C,IAAA;YAALC,GAAG,GAAAhG,wBAAA,CAAA+F,IAAA,EAAAnG,SAAA;UAAA,OAAA0B,aAAA,CAAAA,aAAA,KACpB0E,GAAG;YACN9C,SAAS,EAAE,IAAIC,IAAI,CAACD,SAAS,CAAC,CAACG,QAAQ,CAAC,CAAC,CAAE;UAAA;QAAA,CAC3C,CAAC;QAELR,QAAQ,CAAC,IAAAU,qBAAc,EAAC;UAAER;QAAY,CAAC,CAAC,CAAC;;QAEzC;QACAF,QAAQ,CAAC,IAAAuC,gCAAyB,EAAC,IAAI,CAAC,CAAC;MAC3C;;MAEA;MACA,MAAMa,UAAU,GAAG;QACjBC,SAAS,EAAEV,IAAI,CAACW,WAAW,CAACC,UAAU;QACtCC,cAAc,EAAEb,IAAI,CAACW,WAAW,CAACG;MACnC,CAAC;;MAED;MACA,MAAMC,oBAAoB,GAAG,EAC3BjE,MAAM,CAACkE,KAAK,CAACrD,IAAI,CAACsD,KAAK,CAACR,UAAU,CAACC,SAAS,CAAC,CAAC,IAC3C5D,MAAM,CAACkE,KAAK,CAACrD,IAAI,CAACsD,KAAK,CAACR,UAAU,CAACI,cAAc,CAAC,CAAC,CACvD;MAED,IAAI/F,MAAM,CAACU,IAAI,CAACiF,UAAU,CAAC,CAACxF,MAAM,KAAK,CAAC,IAAI8F,oBAAoB,EAAE;QAChE1D,QAAQ,CAAC,IAAA6D,oBAAa,EAAC,IAAAC,iCAAe,EAACV,UAAU,CAAC,CAAC,CAAC;MACtD;MAEA,IAAIT,IAAI,CAACoB,uBAAuB,EAAE;QAAE/D,QAAQ,CAAC,IAAAgE,8BAAuB,EAACrB,IAAI,CAACoB,uBAAuB,CAAC,CAAC;MAAE;IACvG,CAAC,CAAC,OAAOhC,KAAK,EAAE;MACd/B,QAAQ,CAAC,IAAAgC,kBAAW,EAAC,CAAC,CAAC;IACzB;IACAhC,QAAQ,CAAC,IAAAyB,sBAAe,EAAC,KAAK,CAAC,CAAC;EAClC,CAAC;AACH","ignoreList":[]}